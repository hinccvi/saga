// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.12
// source: orderHistory.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// OrderHistoryServiceClient is the client API for OrderHistoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OrderHistoryServiceClient interface {
	GetOrderHistory(ctx context.Context, in *GetOrderHistoryRequest, opts ...grpc.CallOption) (*GetOrderHistoryReply, error)
}

type orderHistoryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOrderHistoryServiceClient(cc grpc.ClientConnInterface) OrderHistoryServiceClient {
	return &orderHistoryServiceClient{cc}
}

func (c *orderHistoryServiceClient) GetOrderHistory(ctx context.Context, in *GetOrderHistoryRequest, opts ...grpc.CallOption) (*GetOrderHistoryReply, error) {
	out := new(GetOrderHistoryReply)
	err := c.cc.Invoke(ctx, "/v1.order_history.OrderHistoryService/GetOrderHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderHistoryServiceServer is the server API for OrderHistoryService service.
// All implementations must embed UnimplementedOrderHistoryServiceServer
// for forward compatibility
type OrderHistoryServiceServer interface {
	GetOrderHistory(context.Context, *GetOrderHistoryRequest) (*GetOrderHistoryReply, error)
	mustEmbedUnimplementedOrderHistoryServiceServer()
}

// UnimplementedOrderHistoryServiceServer must be embedded to have forward compatible implementations.
type UnimplementedOrderHistoryServiceServer struct {
}

func (UnimplementedOrderHistoryServiceServer) GetOrderHistory(context.Context, *GetOrderHistoryRequest) (*GetOrderHistoryReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrderHistory not implemented")
}
func (UnimplementedOrderHistoryServiceServer) mustEmbedUnimplementedOrderHistoryServiceServer() {}

// UnsafeOrderHistoryServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OrderHistoryServiceServer will
// result in compilation errors.
type UnsafeOrderHistoryServiceServer interface {
	mustEmbedUnimplementedOrderHistoryServiceServer()
}

func RegisterOrderHistoryServiceServer(s grpc.ServiceRegistrar, srv OrderHistoryServiceServer) {
	s.RegisterService(&OrderHistoryService_ServiceDesc, srv)
}

func _OrderHistoryService_GetOrderHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderHistoryServiceServer).GetOrderHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.order_history.OrderHistoryService/GetOrderHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderHistoryServiceServer).GetOrderHistory(ctx, req.(*GetOrderHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// OrderHistoryService_ServiceDesc is the grpc.ServiceDesc for OrderHistoryService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OrderHistoryService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "v1.order_history.OrderHistoryService",
	HandlerType: (*OrderHistoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOrderHistory",
			Handler:    _OrderHistoryService_GetOrderHistory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orderHistory.proto",
}
